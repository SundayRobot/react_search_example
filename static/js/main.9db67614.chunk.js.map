{"version":3,"sources":["components/Form.js","components/ReturnedItems.js","App.js","components/ItemDetail.js","components/NotFound.js","components/Router.js","serviceWorker.js","index.js"],"names":["Form","props","onSubmit","getResultsFunction","className","type","name","ReturnedItems","itemsinstate","map","item","desc1","data","description","key","nasa_id","src","links","href","alt","title","length","substring","to","pathname","state","image","desc","keywords","App","componentDidMount","a","returned","localStorage","getItem","JSON","parse","jsondata","setState","returneditems","componentDidUpdate","itemly","stringify","setItem","getDatafromApi","e","preventDefault","searchterm","target","elements","input_field","value","blank","resultlength","console","log","axios","get","then","items","collection","inputValue","bind","this","React","Component","ItemDetail","activeitem","activeTitle","activeDesc","activeKeywords","location","gotoapi2","kw","indexOf","NotFound","Router","path","component","exact","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9db67614.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Form = (props) =>{\n  return (\n    <form onSubmit={props.getResultsFunction}>\n      <input className= \"input\" type=\"text\" name=\"input_field\" />\n      <button className=\"button\">search</button>\n    </form>\n  )\n}\n\nexport default Form;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { slideInUp } from 'animate.css'\n\nconst ReturnedItems = (props) =>{\n  return (\n    <div>\n      {props.itemsinstate.map(item =>{\n        const desc1 = `${item && item.data && item.data[0] && item.data[0].description}`;\n        //console.log(desc1.length)\n        return (\n          <div className=\"item-holder animate__animated animate__slideInUp\" key={item.data[0].nasa_id}>\n            <img className=\"item-image\" src={item && item.links && item.links[0].href} alt={item.data[0].nasa_id} />\n            <div className=\"item-content\">\n              <h3 className=\"descriptive-h3\">{item.data[0].title.length < 20 ? `${item.data[0].title}` : `${item.data[0].title.substring(0,25)}...`}</h3><br/>\n              <p className=\"descriptive-text\">{desc1.length < 90 ? desc1 : `${desc1.substring(0,95)}...`}</p><br/>\n              <button className=\"read-more-button\">\n                <Link to={{pathname: `/item/${item.data[0].nasa_id}`, \n                state: {\n                  image: item && item.links && item.links[0].href,\n                  title: item.data[0].title,\n                  desc:  item && item.data && item.data[0].description,\n                  keywords: item.data[0].keywords\n                }\n\n                  }}>\n                read more\n                </Link>\n              </button>\n          </div>\n        </div>\n        )\n    })}\n  </div>\n  )\n}\n\nexport default ReturnedItems;","import React from \"react\";\nimport axios from 'axios';\nimport \"./index.css\";\nimport Form from './components/Form';\nimport ReturnedItems from './components/ReturnedItems';\n\n\n\n\nclass App extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = { returneditems : [], blank: '',resultlength: '', inputValue: '' }\n    this.getDatafromApi = this.getDatafromApi.bind(this);\n  }\n  \n\n componentDidMount = async ()=>{\n    const returned = localStorage.getItem(\"theitems\");\n    const jsondata = await JSON.parse(returned);\n    this.setState({returneditems: jsondata })\n  }\n\n  componentDidUpdate = ()=>{\n    const itemly = JSON.stringify(this.state.returneditems);\n    localStorage.setItem('theitems', itemly);\n  }\n\n  getDatafromApi = (e) =>{\n    e.preventDefault();\n    const searchterm = e.target.elements.input_field.value;\n    \n    if(searchterm.value === '' || searchterm.length === 0){\n        this.setState({ returneditems: [], \n          blank: '[ Please type something into the search field ]',\n          resultlength: ''\n         })\n        console.log(this.state.blank);\n\n    }else if(searchterm.length > 0 || searchterm.value !== ''){\n        axios.get(`https://images-api.nasa.gov/search?q=${searchterm}`)\n        .then(data=>{\n          const items = data.data.collection.items;\n          this.setState({ \n            returneditems: items, \n            blank: '', \n            resultlength: items.length,\n            inputValue : searchterm })\n        });\n      }\n\n      this.setState({\n        returneditems : [], blank: '',resultlength: '', inputValue: ''\n      })\n    \n      // searchterm.value = ''\n      \n    }\n\n  \n\n  render(){\n    // console.log(this.state.returneditems.length)\n    const resultForSearchterm = `[ ${this.state.resultlength} results for \"${this.state.inputValue}\" ]`;\n    return (\n      <div>\n        <header>\n          <Form getResultsFunction = {this.getDatafromApi}/>\n        </header>\n        <div className=\"main-container\">\n          <p className=\"noentries\">{this.state.returneditems.length < 1 ? `no results for \"${this.state.inputValue}\"`: this.state.blank}</p>\n          <ReturnedItems itemsinstate = {this.state.returneditems} />\n       </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { slideInLeft, slideInRight } from \"animate.css\";\n\nclass ItemDetail extends React.Component{\n  state = {\n    activeitem: [],\n    activeTitle: [],\n    activeDesc: [],\n    activeKeywords: []\n  }\n\n  componentDidMount = async ()=>{\n    const image = this.props.location.state.image;\n    const title = this.props.location.state.title;\n    const desc = this.props.location.state.desc;\n    const keywords = this.props.location.state.keywords;\n    const gotoapi2 = await axios.get(`https://images-api.nasa.gov/search?q=${title}`);\n    const theResults2 = await gotoapi2.data.collection.items;\n   \n    this.setState({\n      activeitem: image,\n      activeTitle: title,\n      activeDesc: desc,\n      activeKeywords: keywords\n    })\n  }\n  render(){\n    console.log('hello',this.state.activeitem)\n    return (\n        <div className=\"item-detail\">\n          {this.state.activeitem.length !== 0 && \n          <div>\n            <div className=\"item-detail-image-holder animate__animated animate__slideInLeft\">\n              <img className=\"item-detail-image\" src={this.state.activeitem} alt=\"\" />\n            </div>\n            <div className=\"item-detail-text animate__animated animate__slideInRight\">\n              <h2 className=\"item-detail-descriptive-heading\">{this.state.activeTitle}</h2><br/>\n              <p className=\"item-detail-descriptive-text\">{this.state.activeDesc}</p>\n              {this.state.activeKeywords ? \n              <div className=\"keyword-holder\">\n                <span>KEYWORDS: &nbsp;</span>\n                {this.state.activeKeywords.map(kw=>{\n                  return (\n                      <span key={this.state.activeKeywords.indexOf(kw)}> [ &nbsp;{kw}&nbsp; ]</span>\n                      )\n                  })}\n            </div>\n            : '' }\n          <button className=\"item-detail-go-back-button\"><Link to=\"/\">GO BACK</Link></button>\n          </div>\n        </div>\n          }\n      </div>\n\n    );\n  }\n}\n\nexport default ItemDetail;","import React from \"react\";\n\nconst NotFound = (props) =>{\n  return (\n    <div className=\"container-div\">\n      <img className=\"notfoundimage\" src=\"https://images-assets.nasa.gov/image/PIA03654/PIA03654~thumb.jpg\" alt=\"not found\"/>\n      <p className=\"notfound\">Page not found </p>\n    </div>\n  )\n}\n\nexport default NotFound;","import React from \"react\";\nimport App from \"../App\";\nimport ItemDetail from \"./ItemDetail\";\nimport NotFound from './NotFound';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\n\nconst Router = () =>{\n  return (\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/react_search_example/\" component={App} exact/>\n          <Route  path=\"/react_search_example/item/:id\" component={ItemDetail}/>\n          <Route component={NotFound} />\n        </Switch>\n    </BrowserRouter>\n  \n  );\n}\n\nexport default Router;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Router from './components/Router';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}